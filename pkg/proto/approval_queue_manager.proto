syntax = "proto3";
option go_package = "github.com/aman-bansal/approval-queue/pkg/grpc";

service ApprovalQueueManager {
    rpc Create (CreateRequest) returns (CreateResponse) {
    }
    rpc Get (GetRequest) returns (GetResponse) {
    }
    rpc Search (SearchRequest) returns (SearchResponse) {
    }
    rpc Action (ActionRequest) returns (ActionResponse) {
    }
}

message CreateRequest {
    string queue_name = 1;
    string resource_id = 2;
    string resource_type = 3;
    string action_meta = 4;
    CreateApprovalStageRequest approval_stages = 5;
}

message CreateApprovalStageRequest {
    string stage_meta = 1;
}

message CreateResponse {
    int64 approval_queue_id = 1;
}

message GetRequest {
    int64 approval_queue_id = 1;
}

message GetResponse {
    ApprovalQueue queue = 1;
}

message SearchRequest {
    string query_string = 1;
    string resource_id = 2;
    string resource_type = 3;
    Page page = 4;
}

message SearchResponse {
    repeated ApprovalQueue queue = 1;
}

message ActionRequest {
    int64 approval_queue_id = 1;
    int64 approval_stage_id = 2;
    string comment = 3;
    ActionType action_type = 4;
}

message ActionResponse {
    bool success = 1;
}

message ApprovalQueue {
    int64 Id = 1;
    string queue_name = 2;
    string resource_id = 3;
    string resource_type = 4;
    string action_meta = 5;
    State state = 6;
    ApprovalStage approval_stages = 7;
}

message ApprovalStage {
    int64 Id = 1;
    State state = 3;
    string comment = 4;
    string stageMeta = 5;
}

message Page {
    int64 from = 1;
    int64 size = 2;
}

message PaginationResponse {
    int64 total_count = 1;
    int64 from = 2;
    int64 size = 3;
}
enum ActionType {
    ACTION_TYPE_UNDEFINED = 0;
    APPROVE = 1;
    REJECT = 2;
    SKIP = 3;
}

enum State {
    STATE_UNDEFINED = 0;
    ASSIGNED = 1;
    APPROVED = 2;
    REJECTED = 3;
    QUEUED = 4;
}