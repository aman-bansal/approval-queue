// Code generated by protoc-gen-go. DO NOT EDIT.
// source: approval_queue_manager.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	approval_queue_manager.proto

It has these top-level messages:
	CreateRequest
	ApprovalStageRequest
	CreateResponse
	UpdateRequest
	UpdateResponse
	GetRequest
	GetResponse
	SearchRequest
	SearchResponse
	ActionRequest
	ActionResponse
	ApprovalQueue
	ApprovalStage
	Page
	PaginationResponse
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ActionType int32

const (
	ActionType_ACTION_TYPE_UNDEFINED ActionType = 0
	ActionType_APPROVE               ActionType = 1
	ActionType_REJECT                ActionType = 2
	ActionType_SKIP                  ActionType = 3
)

var ActionType_name = map[int32]string{
	0: "ACTION_TYPE_UNDEFINED",
	1: "APPROVE",
	2: "REJECT",
	3: "SKIP",
}
var ActionType_value = map[string]int32{
	"ACTION_TYPE_UNDEFINED": 0,
	"APPROVE":               1,
	"REJECT":                2,
	"SKIP":                  3,
}

func (x ActionType) String() string {
	return proto.EnumName(ActionType_name, int32(x))
}
func (ActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type State int32

const (
	State_STATE_UNDEFINED State = 0
	State_ASSIGNED        State = 1
	State_APPROVED        State = 2
	State_REJECTED        State = 3
	State_QUEUED          State = 4
)

var State_name = map[int32]string{
	0: "STATE_UNDEFINED",
	1: "ASSIGNED",
	2: "APPROVED",
	3: "REJECTED",
	4: "QUEUED",
}
var State_value = map[string]int32{
	"STATE_UNDEFINED": 0,
	"ASSIGNED":        1,
	"APPROVED":        2,
	"REJECTED":        3,
	"QUEUED":          4,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CreateRequest struct {
	QueueName      string                `protobuf:"bytes,1,opt,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	ResourceId     string                `protobuf:"bytes,2,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	ResourceType   string                `protobuf:"bytes,3,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
	ActionMeta     string                `protobuf:"bytes,4,opt,name=action_meta,json=actionMeta" json:"action_meta,omitempty"`
	ApprovalStages *ApprovalStageRequest `protobuf:"bytes,5,opt,name=approval_stages,json=approvalStages" json:"approval_stages,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateRequest) GetQueueName() string {
	if m != nil {
		return m.QueueName
	}
	return ""
}

func (m *CreateRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *CreateRequest) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *CreateRequest) GetActionMeta() string {
	if m != nil {
		return m.ActionMeta
	}
	return ""
}

func (m *CreateRequest) GetApprovalStages() *ApprovalStageRequest {
	if m != nil {
		return m.ApprovalStages
	}
	return nil
}

type ApprovalStageRequest struct {
	StageMeta string `protobuf:"bytes,1,opt,name=stage_meta,json=stageMeta" json:"stage_meta,omitempty"`
}

func (m *ApprovalStageRequest) Reset()                    { *m = ApprovalStageRequest{} }
func (m *ApprovalStageRequest) String() string            { return proto.CompactTextString(m) }
func (*ApprovalStageRequest) ProtoMessage()               {}
func (*ApprovalStageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ApprovalStageRequest) GetStageMeta() string {
	if m != nil {
		return m.StageMeta
	}
	return ""
}

type CreateResponse struct {
	ApprovalQueueId int64 `protobuf:"varint,1,opt,name=approval_queue_id,json=approvalQueueId" json:"approval_queue_id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateResponse) GetApprovalQueueId() int64 {
	if m != nil {
		return m.ApprovalQueueId
	}
	return 0
}

type UpdateRequest struct {
	ApprovalQueueId int64                 `protobuf:"varint,1,opt,name=approval_queue_id,json=approvalQueueId" json:"approval_queue_id,omitempty"`
	QueueName       string                `protobuf:"bytes,2,opt,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	ResourceId      string                `protobuf:"bytes,3,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	ResourceType    string                `protobuf:"bytes,4,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
	ActionMeta      string                `protobuf:"bytes,5,opt,name=action_meta,json=actionMeta" json:"action_meta,omitempty"`
	ApprovalStages  *ApprovalStageRequest `protobuf:"bytes,6,opt,name=approval_stages,json=approvalStages" json:"approval_stages,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UpdateRequest) GetApprovalQueueId() int64 {
	if m != nil {
		return m.ApprovalQueueId
	}
	return 0
}

func (m *UpdateRequest) GetQueueName() string {
	if m != nil {
		return m.QueueName
	}
	return ""
}

func (m *UpdateRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *UpdateRequest) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *UpdateRequest) GetActionMeta() string {
	if m != nil {
		return m.ActionMeta
	}
	return ""
}

func (m *UpdateRequest) GetApprovalStages() *ApprovalStageRequest {
	if m != nil {
		return m.ApprovalStages
	}
	return nil
}

type UpdateResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type GetRequest struct {
	ApprovalQueueId int64 `protobuf:"varint,1,opt,name=approval_queue_id,json=approvalQueueId" json:"approval_queue_id,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetRequest) GetApprovalQueueId() int64 {
	if m != nil {
		return m.ApprovalQueueId
	}
	return 0
}

type GetResponse struct {
	Queue *ApprovalQueue `protobuf:"bytes,1,opt,name=queue" json:"queue,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetResponse) GetQueue() *ApprovalQueue {
	if m != nil {
		return m.Queue
	}
	return nil
}

type SearchRequest struct {
	QueryString  string `protobuf:"bytes,1,opt,name=query_string,json=queryString" json:"query_string,omitempty"`
	ResourceId   string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	ResourceType string `protobuf:"bytes,3,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
	Page         *Page  `protobuf:"bytes,4,opt,name=page" json:"page,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SearchRequest) GetQueryString() string {
	if m != nil {
		return m.QueryString
	}
	return ""
}

func (m *SearchRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *SearchRequest) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *SearchRequest) GetPage() *Page {
	if m != nil {
		return m.Page
	}
	return nil
}

type SearchResponse struct {
	Queue []*ApprovalQueue `protobuf:"bytes,1,rep,name=queue" json:"queue,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *SearchResponse) GetQueue() []*ApprovalQueue {
	if m != nil {
		return m.Queue
	}
	return nil
}

type ActionRequest struct {
	ApprovalQueueId int64      `protobuf:"varint,1,opt,name=approval_queue_id,json=approvalQueueId" json:"approval_queue_id,omitempty"`
	ApprovalStageId int64      `protobuf:"varint,2,opt,name=approval_stage_id,json=approvalStageId" json:"approval_stage_id,omitempty"`
	Comment         string     `protobuf:"bytes,3,opt,name=comment" json:"comment,omitempty"`
	ActionType      ActionType `protobuf:"varint,4,opt,name=action_type,json=actionType,enum=ActionType" json:"action_type,omitempty"`
}

func (m *ActionRequest) Reset()                    { *m = ActionRequest{} }
func (m *ActionRequest) String() string            { return proto.CompactTextString(m) }
func (*ActionRequest) ProtoMessage()               {}
func (*ActionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ActionRequest) GetApprovalQueueId() int64 {
	if m != nil {
		return m.ApprovalQueueId
	}
	return 0
}

func (m *ActionRequest) GetApprovalStageId() int64 {
	if m != nil {
		return m.ApprovalStageId
	}
	return 0
}

func (m *ActionRequest) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *ActionRequest) GetActionType() ActionType {
	if m != nil {
		return m.ActionType
	}
	return ActionType_ACTION_TYPE_UNDEFINED
}

type ActionResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *ActionResponse) Reset()                    { *m = ActionResponse{} }
func (m *ActionResponse) String() string            { return proto.CompactTextString(m) }
func (*ActionResponse) ProtoMessage()               {}
func (*ActionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ActionResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ApprovalQueue struct {
	Id             int64          `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	QueueName      string         `protobuf:"bytes,2,opt,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	ResourceId     string         `protobuf:"bytes,3,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	ResourceType   string         `protobuf:"bytes,4,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
	ActionMeta     string         `protobuf:"bytes,5,opt,name=action_meta,json=actionMeta" json:"action_meta,omitempty"`
	State          State          `protobuf:"varint,6,opt,name=state,enum=State" json:"state,omitempty"`
	ApprovalStages *ApprovalStage `protobuf:"bytes,7,opt,name=approval_stages,json=approvalStages" json:"approval_stages,omitempty"`
}

func (m *ApprovalQueue) Reset()                    { *m = ApprovalQueue{} }
func (m *ApprovalQueue) String() string            { return proto.CompactTextString(m) }
func (*ApprovalQueue) ProtoMessage()               {}
func (*ApprovalQueue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ApprovalQueue) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ApprovalQueue) GetQueueName() string {
	if m != nil {
		return m.QueueName
	}
	return ""
}

func (m *ApprovalQueue) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *ApprovalQueue) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *ApprovalQueue) GetActionMeta() string {
	if m != nil {
		return m.ActionMeta
	}
	return ""
}

func (m *ApprovalQueue) GetState() State {
	if m != nil {
		return m.State
	}
	return State_STATE_UNDEFINED
}

func (m *ApprovalQueue) GetApprovalStages() *ApprovalStage {
	if m != nil {
		return m.ApprovalStages
	}
	return nil
}

type ApprovalStage struct {
	Id        int64  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	State     State  `protobuf:"varint,3,opt,name=state,enum=State" json:"state,omitempty"`
	Comment   string `protobuf:"bytes,4,opt,name=comment" json:"comment,omitempty"`
	StageMeta string `protobuf:"bytes,5,opt,name=stageMeta" json:"stageMeta,omitempty"`
}

func (m *ApprovalStage) Reset()                    { *m = ApprovalStage{} }
func (m *ApprovalStage) String() string            { return proto.CompactTextString(m) }
func (*ApprovalStage) ProtoMessage()               {}
func (*ApprovalStage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ApprovalStage) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ApprovalStage) GetState() State {
	if m != nil {
		return m.State
	}
	return State_STATE_UNDEFINED
}

func (m *ApprovalStage) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *ApprovalStage) GetStageMeta() string {
	if m != nil {
		return m.StageMeta
	}
	return ""
}

type Page struct {
	From int64 `protobuf:"varint,1,opt,name=from" json:"from,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
}

func (m *Page) Reset()                    { *m = Page{} }
func (m *Page) String() string            { return proto.CompactTextString(m) }
func (*Page) ProtoMessage()               {}
func (*Page) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Page) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *Page) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type PaginationResponse struct {
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	From       int64 `protobuf:"varint,2,opt,name=from" json:"from,omitempty"`
	Size       int64 `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
}

func (m *PaginationResponse) Reset()                    { *m = PaginationResponse{} }
func (m *PaginationResponse) String() string            { return proto.CompactTextString(m) }
func (*PaginationResponse) ProtoMessage()               {}
func (*PaginationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *PaginationResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *PaginationResponse) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *PaginationResponse) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "CreateRequest")
	proto.RegisterType((*ApprovalStageRequest)(nil), "ApprovalStageRequest")
	proto.RegisterType((*CreateResponse)(nil), "CreateResponse")
	proto.RegisterType((*UpdateRequest)(nil), "UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "UpdateResponse")
	proto.RegisterType((*GetRequest)(nil), "GetRequest")
	proto.RegisterType((*GetResponse)(nil), "GetResponse")
	proto.RegisterType((*SearchRequest)(nil), "SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "SearchResponse")
	proto.RegisterType((*ActionRequest)(nil), "ActionRequest")
	proto.RegisterType((*ActionResponse)(nil), "ActionResponse")
	proto.RegisterType((*ApprovalQueue)(nil), "ApprovalQueue")
	proto.RegisterType((*ApprovalStage)(nil), "ApprovalStage")
	proto.RegisterType((*Page)(nil), "Page")
	proto.RegisterType((*PaginationResponse)(nil), "PaginationResponse")
	proto.RegisterEnum("ActionType", ActionType_name, ActionType_value)
	proto.RegisterEnum("State", State_name, State_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for ApprovalQueueManager service

type ApprovalQueueManagerClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc1.CallOption) (*CreateResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc1.CallOption) (*UpdateResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc1.CallOption) (*GetResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc1.CallOption) (*SearchResponse, error)
	Action(ctx context.Context, in *ActionRequest, opts ...grpc1.CallOption) (*ActionResponse, error)
}

type approvalQueueManagerClient struct {
	cc *grpc1.ClientConn
}

func NewApprovalQueueManagerClient(cc *grpc1.ClientConn) ApprovalQueueManagerClient {
	return &approvalQueueManagerClient{cc}
}

func (c *approvalQueueManagerClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc1.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := grpc1.Invoke(ctx, "/ApprovalQueueManager/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *approvalQueueManagerClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc1.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := grpc1.Invoke(ctx, "/ApprovalQueueManager/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *approvalQueueManagerClient) Get(ctx context.Context, in *GetRequest, opts ...grpc1.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := grpc1.Invoke(ctx, "/ApprovalQueueManager/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *approvalQueueManagerClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc1.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := grpc1.Invoke(ctx, "/ApprovalQueueManager/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *approvalQueueManagerClient) Action(ctx context.Context, in *ActionRequest, opts ...grpc1.CallOption) (*ActionResponse, error) {
	out := new(ActionResponse)
	err := grpc1.Invoke(ctx, "/ApprovalQueueManager/Action", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ApprovalQueueManager service

type ApprovalQueueManagerServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	Action(context.Context, *ActionRequest) (*ActionResponse, error)
}

func RegisterApprovalQueueManagerServer(s *grpc1.Server, srv ApprovalQueueManagerServer) {
	s.RegisterService(&_ApprovalQueueManager_serviceDesc, srv)
}

func _ApprovalQueueManager_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApprovalQueueManagerServer).Create(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ApprovalQueueManager/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApprovalQueueManagerServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApprovalQueueManager_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApprovalQueueManagerServer).Update(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ApprovalQueueManager/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApprovalQueueManagerServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApprovalQueueManager_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApprovalQueueManagerServer).Get(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ApprovalQueueManager/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApprovalQueueManagerServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApprovalQueueManager_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApprovalQueueManagerServer).Search(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ApprovalQueueManager/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApprovalQueueManagerServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApprovalQueueManager_Action_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApprovalQueueManagerServer).Action(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ApprovalQueueManager/Action",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApprovalQueueManagerServer).Action(ctx, req.(*ActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApprovalQueueManager_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "ApprovalQueueManager",
	HandlerType: (*ApprovalQueueManagerServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ApprovalQueueManager_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ApprovalQueueManager_Update_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ApprovalQueueManager_Get_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _ApprovalQueueManager_Search_Handler,
		},
		{
			MethodName: "Action",
			Handler:    _ApprovalQueueManager_Action_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "approval_queue_manager.proto",
}

func init() { proto.RegisterFile("approval_queue_manager.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 827 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0x5e, 0xff, 0x24, 0xbb, 0x3d, 0xde, 0x38, 0x61, 0xa0, 0x52, 0x1a, 0x2d, 0x6a, 0x31, 0x5c,
	0x54, 0x0b, 0x9d, 0xa0, 0x54, 0xfc, 0x5c, 0x20, 0xa4, 0x90, 0x98, 0x95, 0x8b, 0x9a, 0xa6, 0x76,
	0x82, 0x04, 0x12, 0xb2, 0x66, 0x9d, 0xc1, 0x8d, 0x58, 0xff, 0xac, 0x3d, 0x46, 0x5a, 0xee, 0x78,
	0x06, 0x1e, 0x84, 0xa7, 0xe1, 0x35, 0x78, 0x02, 0x2e, 0xd0, 0xcc, 0xd8, 0x8e, 0x9d, 0x5d, 0x14,
	0x5a, 0x71, 0xc1, 0x9d, 0xe7, 0xcb, 0x99, 0xf3, 0xf3, 0x9d, 0xef, 0x9c, 0x09, 0x9c, 0x91, 0x34,
	0xcd, 0x92, 0x9f, 0xc9, 0x95, 0x7f, 0x5d, 0xd0, 0x82, 0xfa, 0x11, 0x89, 0x49, 0x48, 0x33, 0x9c,
	0x66, 0x09, 0x4b, 0xac, 0x3f, 0x14, 0xe8, 0xcd, 0x32, 0x4a, 0x18, 0x75, 0xe9, 0x75, 0x41, 0x73,
	0x86, 0xde, 0x05, 0x90, 0x86, 0x31, 0x89, 0xe8, 0x50, 0x79, 0xa4, 0x3c, 0xbe, 0xe7, 0xde, 0x13,
	0xc8, 0x82, 0x44, 0x14, 0x3d, 0x04, 0x23, 0xa3, 0x79, 0x52, 0x64, 0x01, 0xf5, 0xb7, 0x9b, 0xa1,
	0x2a, 0x7e, 0x87, 0x0a, 0x72, 0x36, 0xe8, 0x7d, 0xe8, 0xd5, 0x06, 0xec, 0x26, 0xa5, 0x43, 0x4d,
	0x98, 0x9c, 0x56, 0xe0, 0xea, 0x26, 0x15, 0x5e, 0x48, 0xc0, 0xb6, 0x49, 0xec, 0x47, 0x94, 0x91,
	0xa1, 0x2e, 0xbd, 0x48, 0xe8, 0x39, 0x65, 0x04, 0x7d, 0x09, 0xfd, 0x3a, 0xef, 0x9c, 0x91, 0x90,
	0xe6, 0xc3, 0xce, 0x23, 0xe5, 0xb1, 0x31, 0xb9, 0x8f, 0xa7, 0x25, 0xee, 0x71, 0xb8, 0xcc, 0xda,
	0x35, 0x49, 0x13, 0xcd, 0xad, 0x4f, 0xe0, 0x9d, 0xbb, 0xec, 0x78, 0x75, 0xc2, 0x9d, 0x8c, 0x5b,
	0x56, 0x27, 0x10, 0x1e, 0xd6, 0xfa, 0x02, 0xcc, 0x8a, 0x8d, 0x3c, 0x4d, 0xe2, 0x9c, 0xa2, 0x73,
	0x78, 0x6b, 0x8f, 0xc0, 0xed, 0x46, 0xdc, 0xd3, 0xdc, 0x3a, 0xc3, 0x97, 0x1c, 0x77, 0x36, 0xd6,
	0xaf, 0x2a, 0xf4, 0xd6, 0xe9, 0xa6, 0x41, 0xe6, 0x6b, 0xdc, 0xde, 0x23, 0x5e, 0x3d, 0x40, 0xbc,
	0x76, 0x98, 0x78, 0xfd, 0x30, 0xf1, 0x9d, 0x7f, 0x43, 0x7c, 0xf7, 0x75, 0x88, 0x3f, 0x07, 0xb3,
	0xa2, 0xa0, 0x64, 0x70, 0x08, 0xc7, 0x79, 0x11, 0x04, 0x34, 0xcf, 0x45, 0xe5, 0x27, 0x6e, 0x75,
	0xb4, 0x3e, 0x07, 0xb8, 0xa0, 0xec, 0x0d, 0xb8, 0xb2, 0x9e, 0x82, 0x21, 0x6e, 0x96, 0x21, 0x3e,
	0x80, 0x8e, 0xb8, 0x21, 0xcc, 0x8d, 0x89, 0x59, 0xa7, 0x2a, 0xec, 0x5d, 0xf9, 0xa3, 0xf5, 0x9b,
	0x02, 0x3d, 0x8f, 0x92, 0x2c, 0x78, 0x55, 0x85, 0x7c, 0x0f, 0x4e, 0xaf, 0x0b, 0x9a, 0xdd, 0xf8,
	0x39, 0xcb, 0xb6, 0x71, 0x58, 0xea, 0xc1, 0x10, 0x98, 0x27, 0xa0, 0xff, 0x48, 0xef, 0x0f, 0x40,
	0x4f, 0x49, 0x28, 0x5b, 0x62, 0x4c, 0x3a, 0x78, 0xc9, 0x19, 0x14, 0x90, 0xf5, 0x29, 0x98, 0x55,
	0x52, 0xb7, 0xab, 0xd1, 0xfe, 0xb9, 0x9a, 0xdf, 0x15, 0xe8, 0x4d, 0x45, 0xdf, 0xde, 0x44, 0x6c,
	0x4d, 0x5b, 0x39, 0x10, 0x65, 0x71, 0x0d, 0x5b, 0xd1, 0x51, 0x67, 0xc3, 0x1b, 0x18, 0x24, 0x51,
	0x44, 0x63, 0x56, 0xd6, 0x56, 0x1d, 0xd1, 0x47, 0xb5, 0x9a, 0x6a, 0xc1, 0x99, 0x13, 0x03, 0xcb,
	0xb4, 0x78, 0xe1, 0x95, 0xb4, 0xf8, 0x37, 0x97, 0x46, 0x95, 0xf0, 0x41, 0x69, 0xfc, 0xc5, 0xab,
	0x6b, 0xe6, 0x8c, 0x4c, 0x50, 0x9d, 0xaa, 0x1c, 0xf5, 0x7f, 0x33, 0x2e, 0x67, 0xd0, 0xc9, 0x19,
	0x61, 0x54, 0x0c, 0x89, 0x39, 0xe9, 0x62, 0x8f, 0x9f, 0x5c, 0x09, 0xa2, 0xcf, 0x6e, 0x0f, 0xd3,
	0xf1, 0x9e, 0x42, 0xe5, 0x30, 0xed, 0x4f, 0x51, 0xb1, 0xab, 0x5e, 0x20, 0xb7, 0xaa, 0xaf, 0xe3,
	0x6a, 0x77, 0xc5, 0x6d, 0x74, 0x4c, 0x6f, 0x77, 0xec, 0x0c, 0x76, 0xdb, 0xae, 0x2c, 0xa7, 0xb1,
	0xfe, 0x30, 0xe8, 0x5c, 0x99, 0x08, 0x81, 0xfe, 0x63, 0x96, 0x44, 0x65, 0x3c, 0xf1, 0xcd, 0xb1,
	0x7c, 0xfb, 0x0b, 0x2d, 0x45, 0x22, 0xbe, 0xad, 0x1f, 0x00, 0x2d, 0x49, 0xb8, 0x8d, 0x49, 0xab,
	0xab, 0x0f, 0xc1, 0x60, 0x09, 0x23, 0x57, 0x7e, 0x90, 0x14, 0x31, 0x2b, 0x9d, 0x80, 0x80, 0x66,
	0x1c, 0xa9, 0xdd, 0xab, 0x77, 0xb8, 0xd7, 0x76, 0xee, 0xcf, 0x9f, 0x01, 0xec, 0xa4, 0x84, 0x1e,
	0xc0, 0xfd, 0xe9, 0x6c, 0xe5, 0xbc, 0x58, 0xf8, 0xab, 0xef, 0x96, 0xb6, 0xbf, 0x5e, 0xcc, 0xed,
	0xaf, 0x9d, 0x85, 0x3d, 0x1f, 0x1c, 0x21, 0x03, 0x8e, 0xa7, 0xcb, 0xa5, 0xfb, 0xe2, 0x5b, 0x7b,
	0xa0, 0x20, 0x80, 0xae, 0x6b, 0x3f, 0xb3, 0x67, 0xab, 0x81, 0x8a, 0x4e, 0x40, 0xf7, 0xbe, 0x71,
	0x96, 0x03, 0xed, 0xdc, 0x85, 0x8e, 0xa0, 0x08, 0xbd, 0x0d, 0x7d, 0x6f, 0x35, 0x5d, 0xb5, 0x1d,
	0x9c, 0xc2, 0xc9, 0xd4, 0xf3, 0x9c, 0x0b, 0x7e, 0x52, 0xc4, 0x49, 0xba, 0x9b, 0x0f, 0x54, 0x7e,
	0x92, 0xfe, 0xec, 0xf9, 0x40, 0xe3, 0xde, 0x5f, 0xae, 0xed, 0xb5, 0x3d, 0x1f, 0xe8, 0x93, 0x3f,
	0x95, 0xdd, 0x2b, 0x23, 0x44, 0xfa, 0x5c, 0xbe, 0xad, 0xe8, 0x43, 0xe8, 0xca, 0x67, 0x04, 0x99,
	0xb8, 0xf5, 0xba, 0x8e, 0xfa, 0xb8, 0xfd, 0xbe, 0x58, 0x47, 0xdc, 0x58, 0x6e, 0x4c, 0x64, 0xe2,
	0xd6, 0xeb, 0x31, 0xea, 0xe3, 0xf6, 0x2a, 0xb5, 0x8e, 0x90, 0x05, 0xda, 0x05, 0x65, 0xc8, 0xc0,
	0xbb, 0xc5, 0x39, 0x3a, 0xc5, 0x8d, 0x5d, 0x28, 0x1d, 0xca, 0x8d, 0x82, 0x4c, 0xdc, 0xda, 0x77,
	0xa3, 0x3e, 0x6e, 0xaf, 0x1a, 0x69, 0x2c, 0x39, 0x46, 0x26, 0x6e, 0xad, 0x93, 0x51, 0x1f, 0xb7,
	0xa7, 0xd5, 0x3a, 0xfa, 0xea, 0xe3, 0xef, 0x71, 0xb8, 0x65, 0xaf, 0x8a, 0x4b, 0x1c, 0x24, 0xd1,
	0x98, 0x44, 0x24, 0x7e, 0x72, 0x49, 0xe2, 0x9c, 0x5c, 0x8d, 0x2b, 0xfd, 0x3e, 0x11, 0x13, 0x38,
	0x4e, 0x7f, 0x0a, 0xc7, 0x61, 0x96, 0x06, 0x97, 0x5d, 0xf1, 0x37, 0xe3, 0xe9, 0xdf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x51, 0x6c, 0x2c, 0xcb, 0x86, 0x08, 0x00, 0x00,
}
